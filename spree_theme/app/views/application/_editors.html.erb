<%
#params :@editors,@param_values_for_editors
# @theme, selected theme,
# @editor, selected editor

# method of this form should be 'get', every time user click a section, get_param_values belong to the section.
%>
<%= form_tag(get_param_values_template_theme_path(@theme), { :remote=>true, :method=>'post', 'data-type'=>'script', :id=>"layout_editor_form",:name=>"layout_editor_form"}) do %>
    
    <ul class="tabs block_header clear-block">
    <% for tab in @editors%>
      <li data-id="<%=tab.id%>">
<%=  link_to(tab.slug,"#", {"class"=>(tab.id==@editor.id ? "selected":"")})%>
      </li>
    <% end%>
    </ul>
 <% # the next div container is for js to get all editors, in other word, its children
 %>
 <div>
<% @editors.each_index{ |idx|%>
  <div style="<%= 'display:none' if @editors[idx]!=@editor %>">
  <%# render :partial=>"editor", :locals => {:editor=>@editors[idx], :param_values=>@param_values_for_editors[idx]}%>
  <%=raw partial_editor( @editors[idx], @param_values_for_editors[idx]) %>
  </div>
<%}%>
 </div>
<%# put these hidden fields here, refresh this form while update editors
%>
<%=hidden_field_tag "selected_page_layout_id", @page_layout.id %>
<%=hidden_field_tag "selected_theme_id", @theme.id %>
<%=hidden_field_tag "selected_editor_id", @editor.id %>

<%# set these hidden fields while a paramvalue just changed.
%>
<%=hidden_field_tag "editing_param_value_id" %>
<%=hidden_field_tag "editing_html_attribute_id" %>
<%=hidden_field_tag "param_value_event" %>

<% end%>
